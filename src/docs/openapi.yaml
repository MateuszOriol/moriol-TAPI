openapi: 3.0.0
info:
  title: Moriol TAPI
  description: API for Witcher characters
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /characters:
    get:
      summary: Get all characters
      responses:
        '200':
          description: List of characters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Character'
    post:
      summary: Create a new character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterInput'
      responses:
        '201':
          description: Character created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
  /characters/{id}:
    get:
      summary: Get character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
    put:
      summary: Update character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterInput'
      responses:
        '200':
          description: Character updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
    patch:
      summary: Partially update character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterInput'
      responses:
        '200':
          description: Character updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
    delete:
      summary: Delete character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /locations:
    get:
      summary: Get all locations
      responses:
        '200':
          description: List of locations
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
    post:
      summary: Create a new location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationInput'
      responses:
        '201':
          description: Location created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
  /locations/{id}:
    get:
      summary: Get location by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
    put:
      summary: Update location by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationInput'
      responses:
        '200':
          description: Location updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
    patch:
      summary: Partially update location by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationInput'
      responses:
        '200':
          description: Location updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
    delete:
      summary: Delete location by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Location deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /monsters:
    get:
      summary: Get all monsters
      responses:
        '200':
          description: List of monsters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Monster'
    post:
      summary: Create a new monster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonsterInput'
      responses:
        '201':
          description: Monster created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monster'
  /monsters/{id}:
    get:
      summary: Get monster by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Monster details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monster'
    put:
      summary: Update monster by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonsterInput'
      responses:
        '200':
          description: Monster updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monster'
    patch:
      summary: Partially update monster by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonsterInput'
      responses:
        '200':
          description: Monster updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monster'
    delete:
      summary: Delete monster by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Monster deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    Character:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        race:
          type: string
        profession:
          type: string
        age:
          type: integer
        locationId:
          type: string
    CharacterInput:
      type: object
      properties:
        name:
          type: string
        race:
          type: string
        profession:
          type: string
        age:
          type: integer
        locationId:
          type: string
    Location:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        region:
          type: string
        description:
          type: string
        characters:
          type: array
          items:
            type: string
        monsters:
          type: array
          items:
            type: string
    LocationInput:
      type: object
      properties:
        name:
          type: string
        region:
          type: string
        description:
          type: string
    Monster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        weakness:
          type: array
          items:
            type: string
        locationId:
          type: string
    MonsterInput:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        weakness:
          type: array
          items:
            type: string
        locationId:
          type: string